// Generated by CoffeeScript 1.6.3
module.exports = {
  find: function(array, predicate) {
    var i, length;
    i = 0;
    length = array.length;
    while (i < length) {
      if (predicate(array[i])) {
        return array[i];
      }
      i++;
    }
    return null;
  },
  arrayOfStringsHasDuplicates: function(array) {
    var i, length, value, valuesSoFar;
    i = 0;
    length = array.length;
    valuesSoFar = {};
    while (i < length) {
      value = array[i];
      if (Object.prototype.hasOwnProperty.call(valuesSoFar, value)) {
        return true;
      }
      valuesSoFar[value] = true;
      i++;
    }
    return false;
  },
  arrayify: function(arg) {
    if (Array.isArray(arg)) {
      return arg;
    }
    if (arg == null) {
      return [];
    }
    return [arg];
  },
  startingWith: function(xs, x) {
    var index;
    index = xs.indexOf(x);
    if (index === -1) {
      return [];
    }
    return xs.slice(index);
  },
  parseFunctionArguments: function(fun) {
    var argumentPart, dependencies, string;
    if ('function' !== typeof fun) {
      throw new Error('argument must be a function');
    }
    string = fun.toString();
    argumentPart = string.slice(string.indexOf('(') + 1, string.indexOf(')'));
    dependencies = argumentPart.match(/([^\s,]+)/g);
    if (dependencies != null) {
      return dependencies;
    } else {
      return [];
    }
  }
};
